// frontend/src/pages/admin/worker/[workerId]/catamarans.tsx
import React, { useEffect, FormEvent, useState } from "react";
import { useRouter } from "next/router";
import { skipToken } from "@reduxjs/toolkit/query";
import {
  useGetCatamaransByAdminWorkerQuery,
  useCreateCatamaranMutation,
  useDeleteCatamaranMutation,
} from "../../../../features/catamarans/catamaransApi";

const WorkerCatamaransPage: React.FC = () => {
  const router = useRouter();
  const { workerId } = router.query as { workerId?: string };

  // –ü—Ä–µ–≤—Ä–∞—â–∞–µ–º workerId –≤ —á–∏—Å–ª–æ –∏–ª–∏ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø—Ä–æ—Å
  const numericWorkerId =
    workerId && !Array.isArray(workerId) && !isNaN(+workerId)
      ? Number(workerId)
      : undefined;

  // 1) GET —Å–ø–∏—Å–æ–∫ –∫–∞—Ç–∞–º–∞—Ä–∞–Ω–æ–≤ —ç—Ç–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ (–∞–¥–º–∏–Ω)
  const {
    data: catamarans = [],
    isLoading: loadingList,
    isError: listError,
    refetch,
  } = useGetCatamaransByAdminWorkerQuery(numericWorkerId ?? skipToken, {
    skip: numericWorkerId == null,
  });

  // 2) –ú—É—Ç–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∏ —É–¥–∞–ª–µ–Ω–∏—è
  const [createCatamaran, { isLoading: creating }] =
    useCreateCatamaranMutation();
  const [deleteCatamaran, { isLoading: deleting }] =
    useDeleteCatamaranMutation();

  // 3) –õ–æ–∫–∞–ª—å–Ω—ã–µ —Å—Ç–µ–π—Ç—ã —Ñ–æ—Ä–º—ã
  const [name, setName] = useState("");
  const [notifyOnStart, setNotifyOnStart] = useState(false); // ‚Üê –Ω–æ–≤—ã–π —Ñ–ª–∞–≥
  const [timerLimitMinutes, setTimerLimitMinutes] = useState<number | "">("");

  // 4) –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–±–æ—á–µ–≥–æ ‚Äî —Ä–µ—Ñ–µ—Ç—á–∏–º
  useEffect(() => {
    if (numericWorkerId != null) {
      refetch();
    }
  }, [numericWorkerId, refetch]);

  // 5) –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ç–∞–º–∞—Ä–∞–Ω–∞
  const handleCreate = async (e: FormEvent) => {
    e.preventDefault();
    if (numericWorkerId == null) return;
    try {
      await createCatamaran({
        workerId: numericWorkerId,
        name,
        timerLimitMinutes:
          timerLimitMinutes === "" ? undefined : timerLimitMinutes,
        notifyOnStart, // ‚Üê –ø–µ—Ä–µ–¥–∞—ë–º —Ñ–ª–∞–≥
      }).unwrap();

      // —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–æ—Ä–º—É
      setName("");
      setTimerLimitMinutes("");
      setNotifyOnStart(false);
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ç–∞–º–∞—Ä–∞–Ω–∞:", err);
    }
  };

  // 6) –£–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–∞–º–∞—Ä–∞–Ω–∞
  const handleDelete = async (catId: number) => {
    if (numericWorkerId == null) return;
    try {
      await deleteCatamaran({
        workerId: numericWorkerId,
        catamaranId: catId,
      }).unwrap();
    } catch (err) {
      console.error("–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞—Ç–∞–º–∞—Ä–∞–Ω–∞:", err);
    }
  };

  // 7) –†–µ–Ω–¥–µ—Ä–∏–Ω–≥
  if (!workerId) return <p>–ó–∞–≥—Ä—É–∑–∫–∞‚Ä¶</p>;
  if (loadingList) return <p>–ó–∞–≥—Ä—É–∑–∫–∞ —Å–ø–∏—Å–∫–∞‚Ä¶</p>;
  if (listError) return <p>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–∞—Ç–∞–º–∞—Ä–∞–Ω—ã.</p>;

  return (
    <div style={{ maxWidth: 600, margin: "0 auto", padding: "1rem" }}>
      <h1>–ö–∞—Ç–∞–º–∞—Ä–∞–Ω—ã —Ä–∞–±–æ—á–µ–≥–æ #{numericWorkerId}</h1>

      <form onSubmit={handleCreate} style={{ marginBottom: "1.5rem" }}>
        <input
          value={name}
          onChange={(e) => setName(e.target.value)}
          placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ"
          required
          style={{ marginRight: 8 }}
        />
        <input
          type="number"
          value={timerLimitMinutes}
          onChange={(e) =>
            setTimerLimitMinutes(
              e.target.value === "" ? "" : Number(e.target.value)
            )
          }
          placeholder="–õ–∏–º–∏—Ç (–º–∏–Ω)"
          style={{ width: 120, marginRight: 8 }}
        />
        <label
          style={{
            marginRight: 8,
            display: "inline-flex",
            alignItems: "center",
          }}
        >
          <input
            type="checkbox"
            checked={notifyOnStart}
            onChange={(e) => setNotifyOnStart(e.target.checked)}
            style={{ marginRight: 4 }}
          />
          –£–≤–µ–¥–æ–º–ª—è—Ç—å –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
        </label>
        <button type="submit" disabled={creating}>
          {creating ? "–°–æ–∑–¥–∞—ë–º‚Ä¶" : "–°–æ–∑–¥–∞—Ç—å"}
        </button>
      </form>

      <ul style={{ listStyle: "none", padding: 0 }}>
        {catamarans.map((c) => (
          <li
            key={c.id}
            style={{
              display: "flex",
              justifyContent: "space-between",
              alignItems: "center",
              padding: "0.5rem 0",
              borderBottom: "1px solid #ddd",
            }}
          >
            <div>
              <strong>{c.name}</strong>{" "}
              {c.timerLimitMinutes != null && (
                <span style={{ color: "#555", marginLeft: 8 }}>
                  (–ª–∏–º–∏—Ç: {c.timerLimitMinutes} –º–∏–Ω)
                </span>
              )}
              <span style={{ marginLeft: 12, fontSize: "0.9rem" }}>
                {c.notifyOnStart ? "üîî –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –≤–∫–ª." : "üîï –æ–ø–æ–≤–µ—â–µ–Ω–∏—è –≤—ã–∫–ª."}
              </span>
            </div>
            <button
              onClick={() => handleDelete(c.id)}
              disabled={deleting}
              style={{
                background: "#f44336",
                color: "#fff",
                border: "none",
                padding: "0.25rem 0.5rem",
                borderRadius: 4,
                cursor: "pointer",
              }}
            >
              –£–¥–∞–ª–∏—Ç—å
            </button>
          </li>
        ))}
      </ul>
    </div>
  );
};

export default WorkerCatamaransPage;
